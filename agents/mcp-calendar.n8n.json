{
  "name": "MCP_CALENDAR_SUPABASE",
  "nodes": [
    {
      "parameters": {
        "path": "YOUR_WEBHOOK_ID_HERE"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 1,
      "position": [-2020, 180],
      "id": "61ef5f5b-ae16-4ce2-bd7a-1b489e4b7f69",
      "name": "MCP Server Trigger",
      "webhookId": "YOUR_WEBHOOK_ID_HERE",
      "notesInFlow": false
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "operation"
            },
            {
              "name": "startDate"
            },
            {
              "name": "endDate"
            },
            {
              "name": "eventId"
            },
            {
              "name": "timeZone"
            },
            {
              "name": "eventTitle"
            },
            {
              "name": "summary"
            },
            {
              "name": "attendee"
            },
            {
              "name": "location"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [-1080, 440],
      "id": "d98949bf-af58-4676-9853-216373208722",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "81b134bc-d671-4493-b3ad-8df9be3f49a6",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.operation }}",
                    "rightValue": "getEvent"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "getEvent"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "8d57914f-6587-4fb3-88e0-aa1de6ba56c1",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.operation }}",
                    "rightValue": "deleteEvent"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "deleteEvent"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "7c38f238-213a-46ec-aefe-22e0bcb8dffc",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.operation }}",
                    "rightValue": "createEvent"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "createEvent"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ee9b6783-a0f2-4848-9166-aba6645c1ebc",
                    "leftValue": "={{ $json.operation }}",
                    "rightValue": "updateEvent",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "updateEvent"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9ea6980d-a7be-4dec-8ddf-d2fcffb00af1",
                    "leftValue": "getEventData",
                    "rightValue": "getEventData",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "getEventData"
            }
          ]
        },
        "options": {}
      },
      "id": "1a8a7303-ed8d-4197-8908-f465573a1784",
      "name": "Operation",
      "type": "n8n-nodes-base.switch",
      "position": [-640, 400],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "name": "validate_busy_time",
        "description": "Call this tool to validate if the gap of time is already busy. it is useful to validate before creating a new event",
        "workflowId": {
          "__rl": true,
          "value": "YOUR_WORKFLOW_ID_HERE",
          "mode": "list",
          "cachedResultName": "MCP_CALENDAR_SUPABASE"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "operation": "=getEvent",
            "startDate": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('startDate', ``, 'string') }}",
            "endDate": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('endDate', ``, 'string') }}",
            "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('eventId', ``, 'string') }}",
            "timeZone": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('timeZone', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "operation",
              "displayName": "operation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "startDate",
              "displayName": "startDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "endDate",
              "displayName": "endDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "eventId",
              "displayName": "eventId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "timeZone",
              "displayName": "timeZone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "eventTitle",
              "displayName": "eventTitle",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "summary",
              "displayName": "summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "attendee",
              "displayName": "attendee",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [-2180, 460],
      "id": "58e6445a-b871-4e17-a9af-f09a641fa2f1",
      "name": "validate_busy_time",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "name": "create_new_event",
        "description": "Use this tool to create a new event; always validate if the gap of time is available before creating a new event ",
        "workflowId": {
          "__rl": true,
          "value": "YOUR_WORKFLOW_ID_HERE",
          "mode": "list",
          "cachedResultName": "MCP_CALENDAR_SUPABASE"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "operation": "createEvent",
            "startDate": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('startDate', ``, 'string') }}",
            "endDate": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('endDate', ``, 'string') }}",
            "timeZone": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('timeZone', ``, 'string') }}",
            "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('eventId', ``, 'string') }}",
            "eventTitle": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('eventTitle', ``, 'string') }}",
            "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('summary', ``, 'string') }}",
            "attendee": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('attendee', ``, 'string') }}",
            "location": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('location', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "operation",
              "displayName": "operation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "startDate",
              "displayName": "startDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "endDate",
              "displayName": "endDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "eventId",
              "displayName": "eventId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "timeZone",
              "displayName": "timeZone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "eventTitle",
              "displayName": "eventTitle",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "summary",
              "displayName": "summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "attendee",
              "displayName": "attendee",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [-2020, 460],
      "id": "67eec6f8-d470-44ae-8b24-8dde3097983a",
      "name": "create_new_event",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "name": "delete_event",
        "description": "Call this tool to delete a event, to delete a event you need the even id. it is required",
        "workflowId": {
          "__rl": true,
          "value": "YOUR_WORKFLOW_ID_HERE",
          "mode": "list",
          "cachedResultName": "MCP_CALENDAR_SUPABASE"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "operation": "deleteEvent",
            "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('eventId', ``, 'string') }}",
            "timeZone": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('timeZone', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "operation",
              "displayName": "operation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "startDate",
              "displayName": "startDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "endDate",
              "displayName": "endDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "eventId",
              "displayName": "eventId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "timeZone",
              "displayName": "timeZone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "eventTitle",
              "displayName": "eventTitle",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "summary",
              "displayName": "summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "attendee",
              "displayName": "attendee",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [-1740, 460],
      "id": "d79a8e51-1a82-47e3-ac7b-5dbcf5cf979c",
      "name": "delete_event",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "name": "update_event",
        "description": "Call this tool to update the event name, startDate or endDate. Validate with validate_busy_time before any action",
        "workflowId": {
          "__rl": true,
          "value": "YOUR_WORKFLOW_ID_HERE",
          "mode": "list",
          "cachedResultName": "MCP_CALENDAR_SUPABASE"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "operation": "updateEvent",
            "startDate": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('startDate', ``, 'string') }}",
            "endDate": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('endDate', ``, 'string') }}",
            "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('eventId', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "operation",
              "displayName": "operation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "startDate",
              "displayName": "startDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "endDate",
              "displayName": "endDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "eventId",
              "displayName": "eventId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "timeZone",
              "displayName": "timeZone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "eventTitle",
              "displayName": "eventTitle",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "summary",
              "displayName": "summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "attendee",
              "displayName": "attendee",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [-1880, 460],
      "id": "9fbcae62-abee-4f36-9b9d-9e8539db0074",
      "name": "update_event",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "name": "get_events_in_gap_time",
        "description": "Use this tool to get event data in a gap of time. but if you have just validate the availibity of the time use \"validate_busy_time\" tool this is tool is to get data",
        "workflowId": {
          "__rl": true,
          "value": "YOUR_WORKFLOW_ID_HERE",
          "mode": "list",
          "cachedResultName": "MCP_CALENDAR_SUPABASE"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "operation": "getEventData",
            "startDate": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('startDate', ``, 'string') }}",
            "endDate": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('endDate', ``, 'string') }}",
            "timeZone": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('timeZone', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "operation",
              "displayName": "operation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "startDate",
              "displayName": "startDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "endDate",
              "displayName": "endDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "eventId",
              "displayName": "eventId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "timeZone",
              "displayName": "timeZone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "eventTitle",
              "displayName": "eventTitle",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "summary",
              "displayName": "summary",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "attendee",
              "displayName": "attendee",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [-1580, 460],
      "id": "1e7cdb73-4916-4a15-961f-23d7e5e809a7",
      "name": "get_events_in_gap_time",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "resource": "calendar",
        "calendar": {
          "__rl": true,
          "value": "YOUR_EMAIL@gmail.com",
          "mode": "list",
          "cachedResultName": "YOUR_EMAIL@gmail.com"
        },
        "timeMin": "={{ $('map_data').item.json.startDate }}",
        "timeMax": "={{ $('map_data').item.json.endDate }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [200, -200],
      "id": "575dfbda-6be0-421b-8dac-f776b2b8550b",
      "name": "validate_availability_event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "YOUR_GOOGLE_CREDENTIAL_ID",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "resource": "calendar",
        "calendar": {
          "__rl": true,
          "value": "YOUR_SECONDARY_EMAIL@gmail.com",
          "mode": "list",
          "cachedResultName": "YOUR_SECONDARY_EMAIL@gmail.com"
        },
        "timeMin": "={{ $('map_data').item.json.startDate }}",
        "timeMax": "={{ $('map_data').item.json.endDate }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [-100, 440],
      "id": "c4ac5ade-2055-429e-9582-c7d7fb3da71c",
      "name": "check_availability_to_create",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "YOUR_GOOGLE_CREDENTIAL_ID",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4ee8a84d-c48a-416f-aa31-0633ee59124b",
              "leftValue": "={{ $json.available }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [120, 440],
      "id": "e4a3e67e-a5fd-4ada-a0a1-a9de8e77053b",
      "name": "If"
    },
    {
      "parameters": {
        "errorMessage": "The time you are trying to create the event is busy"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [440, 560],
      "id": "527ff2a4-c7ea-4cda-a3a1-d3c395832eeb",
      "name": "Stop and Error"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "YOUR_EMAIL@gmail.com",
          "mode": "list",
          "cachedResultName": "YOUR_EMAIL@gmail.com"
        },
        "start": "={{ $('map_data').item.json.startDate }}",
        "end": "={{ $('map_data').item.json.endDate }}",
        "additionalFields": {
          "attendees": ["={{ $('map_data').item.json.attendee }}"],
          "description": "={{ $('map_data').item.json.summary }}",
          "location": "={{ $('map_data').item.json.location }}",
          "summary": "={{ $('map_data').item.json.eventTitle }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [440, 380],
      "id": "33c98143-b4e4-477c-9f4a-a445d8a0a001",
      "name": "create_event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "YOUR_GOOGLE_CREDENTIAL_ID",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "973dfb96-eeda-45be-bc93-668c9118677f",
              "name": "available",
              "value": "={{ $json.available }}",
              "type": "boolean"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [460, -200],
      "id": "42b80d62-b2d3-422e-b5d1-7a338b36e1eb",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "YOUR_EMAIL@gmail.com",
          "mode": "list",
          "cachedResultName": "YOUR_EMAIL@gmail.com"
        },
        "timeMin": "={{ $('map_data').item.json.startDate }}",
        "timeMax": "={{ $('map_data').item.json.endDate }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [-20, 920],
      "id": "9143e1b8-8caf-4c7e-83c0-9a2e8c86b3ec",
      "name": "get_event_in_time_gap",
      "alwaysOutputData": true,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "YOUR_GOOGLE_CREDENTIAL_ID",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "YOUR_EMAIL@gmail.com",
          "mode": "list",
          "cachedResultName": "YOUR_EMAIL@gmail.com"
        },
        "eventId": "={{ $('map_data').item.json.eventId }}",
        "updateFields": {
          "end": "={{ $('map_data').item.json.endDate }}",
          "start": "={{ $('map_data').item.json.startDate }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [-20, 700],
      "id": "033db340-93b6-41e4-95ec-d30e9bccbc4d",
      "name": "update_calendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "YOUR_GOOGLE_CREDENTIAL_ID",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"operation\": \"{{ $json.operation }}\",\n  \"startDate\": \"{{ DateTime.fromISO($json.startDate).setZone($json.timeZone).toISO() }}\",\n  \"endDate\": \"{{ DateTime.fromISO($json.endDate).setZone($json.timeZone).toISO() }}\",\n  \"eventId\": \"{{ $json.eventId }}\",\n  \"timeZone\": \"{{$json.timeZone}}\",\n  \"eventTitle\": \"{{ $json.eventTitle }}\",\n  \"attendee\": \"{{ $json.attendee }}\",\n  \"summary\": \"{{ $json.summary }}\",\n  \"location\":\"{{ $json.location }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [-860, 440],
      "id": "87948baf-5f36-4ecd-9347-be3f72c20392",
      "name": "map_data"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "916a2fbe-959e-4155-9eb3-a39957f1c3b2",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "b371027a-ee3a-41b8-90cb-8f5235b70cf1",
              "name": "summary",
              "value": "={{ $json.summary }}",
              "type": "string"
            },
            {
              "id": "0ca8e2a9-f2f6-42e6-b4fe-b6395d8a4b5d",
              "name": "attendees",
              "value": "={{ $json.attendees }}",
              "type": "array"
            },
            {
              "id": "eb50f726-6d74-4497-9ee5-1938a5cca5c1",
              "name": "creator.email",
              "value": "={{ $json.creator.email }}",
              "type": "string"
            },
            {
              "id": "45e516d1-22de-4ba4-9725-9c4c109f1473",
              "name": "organizer.email",
              "value": "={{ $json.organizer.email }}",
              "type": "string"
            },
            {
              "id": "51f26552-bc71-4aeb-8bc6-fa08eac2e8d0",
              "name": "organizer.displayName",
              "value": "={{ $json.organizer.displayName }}",
              "type": "string"
            },
            {
              "id": "10145ce7-1e45-4b66-8af4-eb63526def4c",
              "name": "htmlLink",
              "value": "={{ $json.htmlLink }}",
              "type": "string"
            },
            {
              "id": "97138a18-a840-470e-8fb6-84481f5c5a41",
              "name": "isAvailableTime",
              "value": "={{ $json.isEmpty() }}",
              "type": "boolean"
            },
            {
              "id": "1e776237-9576-4772-8eca-21c838343827",
              "name": "start",
              "value": "={{ $json.start }}",
              "type": "object"
            },
            {
              "id": "4d0b84ef-e726-4e67-b64c-03a0a86c171a",
              "name": "end",
              "value": "={{ $json.end }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [200, 920],
      "id": "483a11d0-d310-44ae-8045-b66ffa961106",
      "name": "response_data_get_data"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "events",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [420, 920],
      "id": "40b68059-f106-4c69-8cfd-82292f8eb083",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "events",
        "filters": {
          "conditions": [
            {
              "keyName": "event_id",
              "condition": "eq",
              "keyValue": "={{ $('map_data').item.json.eventId }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "status",
              "fieldValue": "cancelled"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [680, 40],
      "id": "3dc07f2d-b146-4514-b733-0f0c9b723ffd",
      "name": "cancelled_event",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "YOUR_SUPABASE_CREDENTIAL_ID",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "events",
        "filters": {
          "conditions": [
            {
              "keyName": "event_id",
              "condition": "eq",
              "keyValue": "={{ $json.eventId }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "event_start_date",
              "fieldValue": "={{ $('map_data').item.json.startDate }}"
            },
            {
              "fieldId": "event_end_date",
              "fieldValue": "={{ $('map_data').item.json.endDate }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [200, 700],
      "id": "adffd32d-fccc-4a02-ad2a-638b269765cd",
      "name": "update_event2",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "YOUR_SUPABASE_CREDENTIAL_ID",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "events",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "event_id",
              "fieldValue": "={{ $json.id }}"
            },
            {
              "fieldId": "event_name",
              "fieldValue": "={{ $json.summary }}"
            },
            {
              "fieldId": "event_start_date",
              "fieldValue": "={{ $json.start.dateTime }}"
            },
            {
              "fieldId": "event_end_date",
              "fieldValue": "={{ $json.end.dateTime }}"
            },
            {
              "fieldId": "attendances",
              "fieldValue": "={{ $json.attendees.map(item => item.email) }}"
            },
            {
              "fieldId": "time_zone",
              "fieldValue": "={{ $json.start.timeZone }}"
            },
            {
              "fieldId": "status",
              "fieldValue": "booked"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [920, 360],
      "id": "54f27aaf-e047-4436-9807-71c310a46a5f",
      "name": "create_event1",
      "credentials": {
        "supabaseApi": {
          "id": "YOUR_SUPABASE_CREDENTIAL_ID",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "YOUR_EMAIL@gmail.com",
          "mode": "list",
          "cachedResultName": "YOUR_EMAIL@gmail.com"
        },
        "eventId": "={{ $('map_data').item.json.eventId }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [400, 40],
      "id": "ff083299-8578-4e76-a90d-c9024c0bc4ed",
      "name": "delete_event2",
      "alwaysOutputData": true,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "YOUR_GOOGLE_CREDENTIAL_ID",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "calendar": {
          "__rl": true,
          "value": "YOUR_EMAIL@gmail.com",
          "mode": "list",
          "cachedResultName": "YOUR_EMAIL@gmail.com"
        },
        "eventId": "={{ $('map_data').item.json.eventId }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [-60, 200],
      "id": "20070926-c1c5-4dc2-a107-1f6e4d7764ef",
      "name": "validate_event_exist",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "YOUR_GOOGLE_CREDENTIAL_ID",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f4d5a756-c83c-4915-b2de-8d404e679f90",
              "leftValue": "={{ $json.status }}",
              "rightValue": "cancelled",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [140, 200],
      "id": "74a04c32-2e49-42ad-82e2-57edd34b10e1",
      "name": "If1"
    },
    {
      "parameters": {
        "errorMessage": "Event has been deleted before"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [400, 220],
      "id": "92129b02-4f5b-4fe8-9d3a-065ecffdcba3",
      "name": "Stop and Error1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "bbe55624-db68-4ed4-812a-a1385ddc9cb8",
              "leftValue": "={{json.available}}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [660, 380],
      "id": "3a967b57-2a36-4008-bf52-ee50c88c98cf",
      "name": "If2"
    },
    {
      "parameters": {
        "errorMessage": "Error while the event creations process"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [920, 540],
      "id": "7f2dca49-fac0-4f1c-b382-e75cc5bab52c",
      "name": "Stop and Error2"
    }
  ],
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "operation": "deleteEvent",
          "startDate": null,
          "endDate": null,
          "eventId": "YOUR_EVENT_ID_HERE",
          "timeZone": "america/new_york",
          "eventTitle": null,
          "summary": null,
          "attendee": null,
          "location": null
        }
      }
    ]
  },
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "map_data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Operation": {
      "main": [
        [
          {
            "node": "validate_availability_event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "validate_event_exist",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "check_availability_to_create",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "update_calendar",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get_event_in_time_gap",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "validate_busy_time": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "create_new_event": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "delete_event": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "update_event": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_events_in_gap_time": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "validate_availability_event": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check_availability_to_create": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "create_event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_event_in_time_gap": {
      "main": [
        [
          {
            "node": "response_data_get_data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "map_data": {
      "main": [
        [
          {
            "node": "Operation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "response_data_get_data": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create_event": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update_calendar": {
      "main": [
        [
          {
            "node": "update_event2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "delete_event2": {
      "main": [
        [
          {
            "node": "cancelled_event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "validate_event_exist": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "delete_event2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "create_event1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "YOUR_VERSION_ID_HERE",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "YOUR_INSTANCE_ID_HERE"
  },
  "id": "YOUR_WORKFLOW_ID_HERE",
  "tags": []
}
